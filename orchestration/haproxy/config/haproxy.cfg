#HA Proxy Config
global
  ulimit-n 500000
  maxconn 99999
  maxpipes 99999
  tune.maxaccept 500

  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice

  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log global
  mode http
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms
  timeout tunnel  1h    # timeout to use with WebSocket and CONNECT

  default-server init-addr none

#enable resolving throught docker dns and avoid crashing if service is down while proxy is starting
resolvers docker_resolver
  nameserver dns 127.0.0.11:53

listen stats
  bind *:9999
  stats enable
  stats hide-version
  stats uri /stats
  stats auth admin:admin@123

frontend http_in
  bind *:${HTTP_PORT} alpn h2,http/1.1
  option forwardfor
  http-request add-header "X-Forwarded-Proto" "http"
  acl letsencrypt_http_acl path_beg /.well-known/acme-challenge/
  redirect scheme https if !letsencrypt_http_acl { env(FORCE_HTTPS_REDIRECT) -m str true }
  use_backend letsencrypt_http if letsencrypt_http_acl
  default_backend hass-backend

frontend https_in
  log stdout  format raw  local0  info
  bind *:${HTTPS_PORT} ssl crt /usr/local/etc/haproxy/default.pem crt /usr/local/etc/haproxy/certs.d ciphers ECDHE-RSA-AES256-SHA:RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM alpn h2,http/1.1
  option forwardfor
  http-request add-header "X-Forwarded-Proto" "https"
  default_backend hass-backend

backend letsencrypt_http
  server letsencrypt_http_srv 127.0.0.1:8080

backend hass-backend
  balance leastconn
  option tcp-check
  option log-health-checks
  server haInt ${SERVICE_IP}:${SERVICE_PORT} check inter 5s resolvers docker_resolver resolve-prefer ipv4
  http-request set-header X-Forwarded-Port %[dst_port]
