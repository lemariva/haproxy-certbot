FROM balenalib/raspberrypi5-alpine:3.20

RUN [ "cross-build-start" ]

ARG HAPROXY_MAJOR=3.0
ARG HAPROXY_VERSION=3.0.7

#metadata labels
LABEL org.label-schema.build-date="${BUILD_DATE}" \
      org.label-schema.vcs-url="https://github.com/lemariva/haproxy-certbot" \
	  org.label-schema.name="HAProxy Certbot" \
      org.label-schema.description="haproxy proxy with letsencrypt certbot for https" \
      org.label-schema.vcs-ref="${VCS_REF}" \
      org.label-schema.version="${MAYOR_REVISION}.${MINOR_REVISION}.${BUILD_ID}" \
      org.label-schema.vendor="LeMaRiva|Tech"

RUN set -eux; \
	addgroup --gid 99 --system haproxy; \
	adduser \
		--disabled-password \
		--home /var/lib/haproxy \
		--ingroup haproxy \
		--no-create-home \
		--system \
		--uid 99 \
		haproxy

ENV HAPROXY_VERSION ${HAPROXY_VERSION}
ENV HAPROXY_URL "http://www.haproxy.org/download/${HAPROXY_MAJOR}/src/haproxy-${HAPROXY_VERSION}.tar.gz"

RUN set -eux; \
	\
	apk add --no-cache --virtual .build-deps \
		gcc \
		libc-dev \
		linux-headers \
		lua5.4-dev \
		make \
		openssl \
		openssl-dev \
		pcre2-dev \
		readline-dev \
		tar \
	; \
	\
	wget -O haproxy.tar.gz "$HAPROXY_URL"; \
    mkdir -p /usr/src/haproxy; \
	tar -xzf haproxy.tar.gz -C /usr/src/haproxy --strip-components=1; \
	rm haproxy.tar.gz; \
	\
	makeOpts=' \
		TARGET=linux-musl \
		USE_GETADDRINFO=1 \
		USE_LUA=1 LUA_INC=/usr/include/lua5.4 LUA_LIB=/usr/lib/lua5.4 \
		USE_OPENSSL=1 \
		USE_PCRE2=1 USE_PCRE2_JIT=1 \
		USE_PROMEX=1 \
		\
		EXTRA_OBJS=" \
		" \
	'; \
	\
	nproc="$(getconf _NPROCESSORS_ONLN)"; \
	eval "make -C /usr/src/haproxy -j '$nproc' all $makeOpts"; \
	eval "make -C /usr/src/haproxy install-bin $makeOpts"; \
	\
	mkdir -p /usr/local/etc/haproxy; \
	cp -R /usr/src/haproxy/examples/errorfiles /usr/local/etc/haproxy/errors; \
	rm -rf /usr/src/haproxy; \
	\
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-network --virtual .haproxy-rundeps $runDeps; \
	apk del --no-network .build-deps; \
	\
# smoke test
	haproxy -v

RUN apk add --no-cache --update supervisor libnl3-cli net-tools iproute2 certbot openssl iptables ip6tables \
    && rm -rf /var/cache/apk/*

RUN mkdir -p /var/log/supervisor

COPY resources/supervisord.conf /etc/supervisor/conf.d/supervisord.conf 

RUN mkdir -p /usr/local/etc/haproxy/certs.d \
    && mkdir -p /usr/local/etc/letsencrypt

COPY resources/certbot /etc/cron.d/certbot 
COPY resources/cli.ini /usr/local/etc/letsencrypt/cli.ini 
COPY resources/haproxy-refresh /usr/bin/haproxy-refresh 
COPY resources/haproxy-restart /usr/bin/haproxy-restart 
COPY resources/haproxy-check /usr/bin/haproxy-check 
COPY resources/certbot-certonly /usr/bin/certbot-certonly 
COPY resources/certbot-renew /usr/bin/certbot-renew 

RUN chmod +x /usr/bin/haproxy-refresh /usr/bin/haproxy-restart \
        /usr/bin/haproxy-check /usr/bin/certbot-certonly /usr/bin/certbot-renew

RUN crontab /etc/cron.d/certbot
COPY resources/start.sh /start.sh 

RUN chmod +x /start.sh

EXPOSE 443 80
VOLUME [/config/ /etc/letsencrypt/ /usr/local/etc/haproxy/certs.d/]

CMD ["/start.sh"]

RUN [ "cross-build-end" ]

